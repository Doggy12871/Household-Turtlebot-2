# 0卧室 1书房 2卧室厕所 3客厅 4厨房 5厨房厕所
# generate
def generate():
    sequence = [1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,4,3,1,1,1,1,1,1,5,1,1,1,1,1,3,3,5,3,3,3,3,3,2,1,
                1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,1,1,1,5,1,1,4,3,0,0,2,1,1,1,1,1,3,3,4,3,5,3,3,3,1,2,1,1,0,0,
                0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,1,1,1,1,1,5,4,3,1,1,1,1,1,1,2,3,3,4,3,5,3,1,1,1,1,3,3,2,0,0,
                0,0,0,0,0,2,0,0,0,0,0,0,0,2,2,3,1,4,3,5,1,1,5,3,3,5,1,1,2,0,0,0,0,2,3,3,5,4,3,5,3,3,3,2,0,0,0,0,
                0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,5,1,1,1,1,2,1,1,1,4,3,5,0,0,2,1,1,1,1,3,3,4,3,5,3,1,1,1,1,1,1,2,0,
                0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,5,2,0,0,2,3,3,3,4,3,5,2,1,1,1,2,4,4,4,3,5,2,5,5,2,1,1,3,3,3,3,1,
                1,1,1,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,5,3,3,1,1,1,5,1,1,1,1,1,1,1,3,5,1,1,1,1,2,]
    A_B = [[0 for i in range(6)] for i in range(6)]
    A_B_C = [[[0 for i in range(6)] for i in range(6)] for i in range(6)]
    probability = [[[0 for i in range(6)] for i in range(6)] for i in range(6)]
    for i in range(len(sequence)):
        if i == 0:
            A_B[2][1] += 1
            A_B_C[1][2][1] += 1
        elif i == 1:
            A_B[1][1] += 1
            A_B_C[2][1][1] += 1
        else:
            A_B[sequence[i - 1]][sequence[i]] += 1
            A_B_C[sequence[i - 2]][sequence[i - 1]][sequence[i]] += 1
    for i in range(6):
        for j in range(6):
            for k in range(6):
                if A_B[i][j] != 0:
                    probability[i][j][k] = A_B_C[i][j][k] / A_B[i][j]
    print(probability)

# predict action
def predict(last, now, future):
    model = [[[0.8857142857142857, 0.0, 0.11428571428571428, 0.0, 0.0, 0.0], [0, 0, 0, 0, 0, 0], [0.08333333333333333, 0.16666666666666666, 0.08333333333333333, 0.3333333333333333, 0.3333333333333333, 0.0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]], [[1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.028985507246376812, 0.6666666666666666, 0.11594202898550725, 0.08695652173913043, 0.028985507246376812, 0.07246376811594203], [0.4444444444444444, 0.3333333333333333, 0.0, 0.1111111111111111, 0.1111111111111111, 0.0], [0.0, 0.0, 0.0, 0.8333333333333334, 0.0, 0.16666666666666666], [0.0, 0.0, 0.0, 1.0, 0.0, 0.0], [0.0, 0.6, 0.0, 0.2, 0.2, 0.0]], [[1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 1.0, 0.0, 0.0], [0.0, 0.16666666666666666, 0.0, 0.6666666666666666, 0.0, 0.16666666666666666], [0.0, 0.0, 0.0, 0.8, 0.2, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 1.0]], [[1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.8, 0.1, 0.0, 0.1, 0.0], [0.6666666666666666, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0], [0.0, 0.13043478260869565, 0.13043478260869565, 0.391304347826087, 0.21739130434782608, 0.13043478260869565], [0.0, 0.0, 0.0, 1.0, 0.0, 0.0], [0.06666666666666667, 0.26666666666666666, 0.2, 0.4, 0.06666666666666667, 0.0]], [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0.06666666666666667, 0.26666666666666666, 0.0, 0.0, 0.0, 0.6666666666666666], [0.0, 0.0, 0.0, 0.5, 0.5, 0.0], [0, 0, 0, 0, 0, 0]], [[1.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 1.0, 0.0, 0.0, 0.0, 0.0], [0.25, 0.5, 0.0, 0.0, 0.0, 0.25], [0.0, 0.2857142857142857, 0.0, 0.7142857142857143, 0.0, 0.0], [0.0, 0.0, 0.0, 1.0, 0.0, 0.0], [0.0, 0.0, 1.0, 0.0, 0.0, 0.0]]]
    return model[last][now][future]

if __name__ == "__main__":
    generate()
